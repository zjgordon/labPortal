generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Card {
  id          String      @id @default(cuid())
  title       String
  description String
  url         String
  iconPath    String?
  order       Int         @default(0)
  isEnabled   Boolean     @default(true)
  group       String      @default("General")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  healthPath  String?
  status      CardStatus?
}

model CardStatus {
  id          String    @id @default(cuid())
  cardId      String    @unique
  isUp        Boolean   @default(false)
  lastChecked DateTime?
  lastHttp    Int?
  latencyMs   Int?
  message     String?
  failCount   Int       @default(0)
  nextCheckAt DateTime?
  card        Card      @relation(fields: [cardId], references: [id])
}
